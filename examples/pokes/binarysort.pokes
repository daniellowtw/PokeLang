1 [ ] store "Input number of integers to read: " [ outa ] fold read 
[ dup 0 > ] [ 1 - 1 "Input next integer: " [ outa ] fold 1 load read append store ] while
pop
2 0 store
3 0 store
4 [
2 load rot3
3 load rot3
3 swap store
2 swap store
3 load len 0 ==
[ [ ] 2 load append [ ] append [ ] append ]
[
2 load
3 load 0 get <
[ [ ] 3 load 0 get append 2 load 3 load 1 get 4 load exec append 3 load 2 get append ]
[ [ ] 3 load 0 get append 3 load 1 get append 2 load 3 load 2 get 4 load exec append ] ifelse
] ifelse
swap 3 swap store
swap 2 swap store
] store
5 [ ] store
1 load
[ dup len 0 > ]
[ blockpop 5 load 4 load exec 5 swap store ] while
pop
6 [
dup len 0 >
[ dup 1 get 6 load exec dup 0 get outi 32 outa 2 get 6 load exec ]
[ pop ] ifelse
] store
5 load 6 load exec
